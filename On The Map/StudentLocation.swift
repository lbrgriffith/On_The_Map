//
//  StudentLocation.swift
//  On The Map
//
//  Created by Ricardo Griffith on 24/05/2016.
//  Copyright Â© 2016 DeveloperPlay. All rights reserved.
//

import Foundation

// Student Location
struct StudentLocation {
    // MARK: Properties
    
    // an auto-generated id/key generated by Parse which uniquely identifies a StudentLocation
    var objectId: String!
    // an extra (optional) key used to uniquely identify a StudentLocation
    var uniqueKey: String!
    // the first name of the student which matches their Udacity profile first name
    var firstName: String!
    // the last name of the student which matches their Udacity profile last name
    var lastName: String!
    // the location string used for geocoding the student location
    var mapString: String!
    // the URL provided by the student
    var mediaURL: String!
    // the latitude of the student location (ranges from -90 to 90)
    var latitude: Double!
    // the longitude of the student location (ranges from -180 to 180)
    var longitude: Double!
    
    // MARK: Initializers
    
    init () {
    }
    
    init(dictionary: [String:AnyObject]) {
        objectId = dictionary["objectId"] as! String
        uniqueKey = dictionary["uniqueKey"] as! String
        firstName = dictionary["firstName"] as? String
        lastName = dictionary["lastName"] as? String
        mapString = dictionary["mapString"] as? String
        mapString = dictionary["mapString"] as? String
        mediaURL = dictionary["mediaURL"] as? String
        latitude = dictionary["latitude"] as? Double
        longitude = dictionary["longitude"] as? Double
    }
    
    // MARK: Methods
    
    static func locationsFromResults(results: [[String:AnyObject]]) -> [StudentLocation] {
        
        var locations = [StudentLocation]()
        
        // iterate through array of dictionaries, each Movie is a dictionary
        for result in results {
            locations.append(StudentLocation(dictionary: result))
        }
        
        return locations
    }
}